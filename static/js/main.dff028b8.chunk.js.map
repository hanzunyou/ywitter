{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Yweet.js","components/YweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","REACT_APP_APP_ID","firebase","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Yweet","yweetObj","isOwner","editing","setEditing","text","newYweet","setNewYweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","YweetFactory","userObj","yweet","setYweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","yweets","setYweets","useEffect","onSnapshot","snapshot","yweetArray","docs","map","marginTop","key","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","isLoggedIN","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dff028b8.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\nfirebase.initializeApp(firebaseConfig);\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    \n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    return(\n      <>\n        <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          className=\"authInput\"\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n         {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n    );\n};\nexport default AuthForm;","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter, faGoogle, faGithub, } from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n    const onSocialClick = async(event) => {\n        const {\n            target : {name},\n        } = event;\n        let provider;\n        if(name === \"google\"){\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        }else if(name === \"github\"){\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n    };\n return(\n    <div className=\"authContainer\">\n        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" style={{ marginBottom: 30 }} /> \n        <AuthForm />\n        <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n );\n};\n\nexport default Auth;","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTrash, faPencilAlt} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Yweet = ({yweetObj, isOwner}) => {\n    const [editing, setEditing] = useState(false);\n    const [newYweet, setNewYweet] = useState(yweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this yweet?\");\n        if (ok) {\n           await dbService.doc(`yweets/${yweetObj.id}`).delete();\n           await storageService.refFromURL(yweetObj.attachmentUrl).delete();\n        }\n      };\n    const toggleEditing = () => setEditing((prev) => !prev);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`yweets/${yweetObj.id}`).update({\n            text: newYweet,\n        })\n        setEditing(false);\n    }\n    const onChange = (event) => {\n     const {\n        target : { value }, \n     } = event;\n     setNewYweet(value);\n    };\n    return(\n        <div className=\"yweet\">\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit} className=\"container yweetEdit\">\n                    <input\n                           type=\"text\"\n                           placeholder=\"Edit your yweet\"\n                           value={newYweet}\n                           required\n                           autoFocus\n                           onChange={onChange}\n                           className=\"formInput\"\n                         />\n                      <input type=\"submit\" value=\"Update Yweet\" className=\"formBtn\" />\n                    </form>\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                      Cancel\n                    </span>\n                </>\n            ) : ( \n               <>\n                 <h4>{yweetObj.text}</h4>\n                 {yweetObj.attachmentUrl && <img src={yweetObj.attachmentUrl} />}\n                  {isOwner && (\n                    <div class=\"yweet__actions\">\n                      <span onClick={onDeleteClick}>\n                        <FontAwesomeIcon icon={faTrash} />\n                      </span>\n                      <span onClick={toggleEditing}>\n                        <FontAwesomeIcon icon={faPencilAlt} />\n                      </span>\n                    </div>\n                  )}\n               </>\n            )}\n        </div>\n    );\n}; \n\nexport default Yweet;","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst YweetFactory = ({userObj}) => {\n    const [yweet, setYweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const onSubmit = async(event) => {\n        if (yweet === \"\") {\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if(attachment !== \"\") {\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL(); \n        }\n        const yweetObj = {\n            text: yweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        };\n        await dbService.collection(\"yweets\").add(yweetObj);\n        setYweet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {\n            target : {value},\n        } = event; \n        setYweet(value);\n     };\n     const onFileChange = (event) => {\n         const {\n             target: { files }, \n         } = event;\n         const theFile = files[0];\n         const reader = new FileReader();\n         reader.onloadend = (finishedEvent) => {\n             const {currentTarget : {result}, } = finishedEvent;\n             setAttachment(result);\n         };\n         reader.readAsDataURL(theFile);\n     };\n    const onClearAttachment = () => setAttachment(\"\");\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n        <div className=\"factoryInput__container\">\n          <input\n            className=\"factoryInput__input\"\n            value={yweet}\n            onChange={onChange}\n            type=\"text\"\n            placeholder=\"What's on your mind?\"\n            maxLength={120}\n          />\n          <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n        </div>\n        <label for=\"attach-file\" className=\"factoryInput__label\">\n          <span>Add photos</span>\n          <FontAwesomeIcon icon={faPlus} />\n        </label>\n          <input \n            id=\"attach-file\"\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={onFileChange}\n            style={{\n              opacity: 0,\n            }}\n            />\n      {attachment && (\n                <div className=\"factoryForm__attachment\">\n                <img\n                  src={attachment}\n                  style={{\n                    backgroundImage: attachment,\n                  }}\n                />\n                <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                  <span>Remove</span>\n                  <FontAwesomeIcon icon={faTimes} />\n                </div>\n            </div>\n            )}\n        </form>\n    );\n};\nexport default YweetFactory;","import React, { useState, useEffect } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport Yweet from \"components/Yweet\";\nimport YweetFactory from \"components/YweetFactory\";\n\nconst Home = ({userObj}) => {\n    const [yweets, setYweets] = useState([]);\n    useEffect(() => {\n        dbService.collection(\"yweets\").onSnapshot((snapshot) => {\n            const yweetArray = snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data(),\n            }));\n            setYweets(yweetArray);\n        });\n    }, []);\n    return (\n        <div className=\"container\">\n            <YweetFactory userObj={userObj}/>\n            <div style={{ marginTop : 30}}>\n                {yweets.map((yweet) => (\n                    <Yweet key={yweet.id} yweetObj={yweet} isOwner={yweet.creatorId === userObj.uid }  />\n                ))}       \n            </div>\n        </div>\n    );\n};\nexport default Home;\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n    return (\n      <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n        </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n    );\n  };","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;","import React, {useState, useEffect} from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n    useEffect(() => {\n     authService.onAuthStateChanged((user) => {\n        if (user) {\n            setUserObj({\n                displayName : user.displayName,\n                uid : user.uid,\n                updateProfile : (args) => user.updateProfile(args),\n            });\n        }else {\n            setUserObj(null);\n        }\n        setInit(true);\n     });\n    }, []);\n    const refreshUser = () => {\n        const user =  authService.currentUser;\n        setUserObj({\n            displayName : user.displayName,\n            uid : user.uid,\n            updateProfile : (args) => user.updateProfile(args),\n        });\n    };\n    return (\n        <>\n            {init ? (\n                <AppRouter \n                    refreshUser={refreshUser} \n                    isLoggedIN={Boolean(userObj)} \n                    userObj={userObj}\n                /> \n            ) : ( \n                \"Initializing...\" \n            )}\n        </>\n    );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}